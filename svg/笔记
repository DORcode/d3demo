d3.select("#id")
d3.selectAll(".class")
d3.selectAll("rect")
d3.select("#id rect")
d3.selectAll(".class text")
d3.select(".class")返回第一个

d3.select("#rect1").attr("fill","red")
d3.select("#rect1").attr("stroke","red")
d3.select("#rect1").attr("transform","translate(200,200)")
d3.select("#rect1").attr("transform","rotate(90)")
d3.select("#rect1").attr("transform","scale(90)")

let width = 1;
.attr("transform",`translate(0, ${width+1})`);

d3.select().append().attr("id", "")
d3.select().remove()

# scale
#linear

const xScale = d3.scaleLinear()
  .domain([min, max])
  .range([min, max])

const xScale = d3.scaleLinear()
  .domain([0, d3.max(data, d => d.value)])
  .range([0, innerWidth])

d3.max(数据，回调：如何提取数据的值)

const yScale = d3.scaleBand()
  .domain(list)
  .range([min, max])
  .padding(p);

const yScale = d3.scaleBand()
  .domain(data.map(d => d.name))
  .range([0, innerHeight])
  .padding(0.1)

  引入坐标轴

  yAxis = d3.axisLeft(yScale);
  xAxis = d3.axisBottom(xScale);

  Array.from( new Set(data.map(d => d[''])) )
  [].sort( (a,b) => {
    return new Date(a) - new Date(b);
  })

  #path
  d3.line().x().y()
  d3.geoPath().projection()
  d3.area()
  d3.arc().innerRadius().outerRadius()
  d3.lineRadial().angle().radius()
  